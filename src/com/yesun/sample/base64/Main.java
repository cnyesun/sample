package com.yesun.sample.base64;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.Charset;

import javax.imageio.ImageIO;

import org.apache.commons.io.IOUtils;

import com.sun.image.codec.jpeg.JPEGCodec;
import com.sun.image.codec.jpeg.JPEGImageEncoder;

import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

public class Main {

	public static void main(String[] args) {

		String base64 = "";

		
		System.out.println(base64.hashCode());
		
		BASE64Decoder decoder = new BASE64Decoder();
//		BASE64Encoder encoder = new BASE64Encoder();
		try {
//			byte[] buffer = IOUtils.toByteArray(new FileInputStream("c:\\下载.jpg"));
//			System.out.println(encoder.encode(buffer));
			
			
			
			byte[] buffer = decoder.decodeBuffer(base64);
			
			
//			BufferedImage src = ImageIO.read(new File("c:\\test.bmp"));
//			int width = src.getWidth(null);
//			int height = src.getHeight(null);
//
//			
//			BufferedImage outImg = new BufferedImage(width, height,src.getType());
//			outImg.getGraphics().drawImage(src, 0, 0, width, height, null);
//			FileOutputStream out = new FileOutputStream("c:\\convert.png");
//			JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out);
//			encoder.encode(outImg);
//			out.close();
			
			
			
			
			//image/jpeg to png
			FileOutputStream fos = new FileOutputStream("c:\\test.bmp");
			System.out.println(buffer.length);
			fos.write(buffer);
			fos.flush();
			fos.close();

		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public static void convert(String source, String formatName, String result) {
		try {
			File f = new File(source);
			f.canRead();
			BufferedImage src = ImageIO.read(f);
			ImageIO.write(src, formatName, new File(result));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
